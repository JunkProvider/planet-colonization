<UserControl x:Class="SpaceLogistic.WpfView.View.Map.MapPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:view="clr-namespace:SpaceLogistic.WpfView.View"
             xmlns:resources="clr-namespace:SpaceLogistic.Core.Model.Resources;assembly=SpaceLogistic.Core.Abstractions"
             xmlns:map="clr-namespace:SpaceLogistic.WpfView.View.Map"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=map:MapPageViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="MapPageView_OnLoaded">
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Colors.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />

            <DataTemplate DataType="{x:Type map:MapItemViewModel}">
                <Ellipse
                    Fill="{Binding SurfaceBrush}"
                    Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=view:CustomButton}}"
                    Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=view:CustomButton}}"
                    Stroke="White">
                    <Ellipse.Style>
                        <Style TargetType="Ellipse">
                            <Setter Property="StrokeThickness" Value="0" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="StrokeThickness" Value="2" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Ellipse.Style>
                </Ellipse>
            </DataTemplate>

            <DataTemplate DataType="{x:Type map:StationViewModel}">
                <Rectangle
                    Fill="{Binding SurfaceBrush}"
                    Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=view:CustomButton}}"
                    Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=view:CustomButton}}"
                    Stroke="SteelBlue">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="StrokeThickness" Value="0" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="StrokeThickness" Value="2" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
            </DataTemplate>

            <Style x:Key="TogglePanelButtonStyle" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Padding="0 5 0 5">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="{StaticResource Button1BackgroundBrush}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=ToggleButton}}" Value="True">
                                                <Setter Property="Background" Value="{StaticResource Button1FocusBackgroundBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <TextBlock HorizontalAlignment="Center" Text="{TemplateBinding Content}" Foreground="{StaticResource Button1ForegroundBrush}" FontWeight="Bold" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>

    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0">
            <ItemsControl ItemsSource="{Binding MapItems}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <map:MapControl />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="map:MapControl.Distance" Value="{Binding Path=DisplayOrbit}" />
                        <Setter Property="map:MapControl.Size" Value="{Binding Path=DisplayDiameter}" />
                        <Setter Property="map:MapControl.Period" Value="{Binding Path=DisplayPeriod}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type map:MapItemViewModel}">
                        <view:CustomButton Background="Transparent" ButtonContent="{Binding}" Command="{Binding SelectCommand}" CommandParameter="{Binding}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>
        <Border Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="450" Style="{StaticResource Panel1Style}">
            <StackPanel>
                <ContentControl Content="{Binding SelectedMapItem}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type map:PlanetViewModel}">
                            <StackPanel>
                                <Border Padding="10" Margin="0 0 0 5" Background="{StaticResource Item1BackgroundBrush}">
                                    <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" FontWeight="Bold" />
                                </Border>
                                <StackPanel Margin="0 0 0 5">
                                    <ToggleButton x:Name="OrbitalCharacteristicsToggleButton" Content="Properties" Style="{StaticResource TogglePanelButtonStyle}" />
                                    <StackPanel Orientation="Vertical" Visibility="{Binding IsChecked, ElementName=OrbitalCharacteristicsToggleButton, Converter={StaticResource VisibleIfTrueConverter}}" Margin="5">
                                        <StackPanel Orientation="Horizontal" Margin="0 0 0 2">
                                            <TextBlock Text="Orbit:" Width="200" />
                                            <TextBlock Text="{Binding Orbit}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0 0 0 2">
                                            <TextBlock Text="Orbit Period:" Width="200" />
                                            <TextBlock Text="{Binding Period}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0 0 0 2">
                                            <TextBlock Text="Diameter:" Width="200" />
                                            <TextBlock Text="{Binding Diameter}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0 0 0 2">
                                            <TextBlock Text="Density:" Width="200" />
                                            <TextBlock Text="{Binding Density}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0 0 0 2">
                                            <TextBlock Text="Surf. Gravity:" Width="200" />
                                            <TextBlock Text="{Binding SurfaceGravity}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0 0 0 2">
                                            <TextBlock Text="Temperature:" Width="200" />
                                            <TextBlock Text="{Binding Temperature}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0 0 0 2">
                                            <TextBlock HorizontalAlignment="Left" Text="Esc. Velocity:" Width="200" />
                                            <ItemsControl ItemsSource="{Binding EscapeVelocities}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}" />
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Margin="0 0 0 5">
                                    <ToggleButton x:Name="ResourcesToggleButton" Content="Resources" Style="{StaticResource TogglePanelButtonStyle}" />
                                    <StackPanel Orientation="Vertical" Visibility="{Binding IsChecked, ElementName=ResourcesToggleButton, Converter={StaticResource VisibleIfTrueConverter}}">
                                        <ItemsControl ItemsSource="{Binding Resources}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type resources:Resource}">
                                                    <Border Style="{StaticResource Item1Style}" Margin="0 0 0 2">
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBox Text="{Binding Amount, Mode=OneWay}" IsReadOnly="True" MinWidth="40" Margin="0 0 5 0" HorizontalContentAlignment="Right" />
                                                            <TextBlock Text="{Binding ResourceType.Name}" />
                                                        </StackPanel>
                                                    </Border>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
